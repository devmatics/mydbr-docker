server {
  listen 80;
  server_name localhost;
  root /usr/share/nginx/html;
  
  client_max_body_size 100M;
  
  index index.php index.html index.htm index.nginx-debian.html;
  
  # CORS
  # Used for if logic as nginx doesnt allow add_header in if blocks inside server blocks
  # but does allow add_header in if blocks inside location blocks
  set $cors_origin '';
  set $cors_cred '';
  set $cors_method '';
  set $cors_headers '';
  set $cors_max_age '';
  set $cors_content_type '';
  set $cors_content_length '';
  set $cors_state '';

  # Match allowed origins
  if ($http_origin ~* "^https?:\/\/(.*clockworksafety\.com|localhost:(8080|8081|8082))$") {
    set $cors_origin $http_origin;
    set $cors_cred true;
    set $cors_method 'GET, POST, OPTIONS, HEAD';
    set $cors_headers 'authorization, x-mydbr-auth';
    set $cors_state 'origin';
  }

  # Set state for options requests
  if ($request_method = 'OPTIONS') {
    set $cors_state '${cors_state}_preflight';
  }

  # if valid preflight set options params
  if ($cors_state = 'origin_preflight') {
    set $cors_max_age 3600;
    set $cors_content_type 'text/plain; charset=utf-8';
    set $cors_content_length 0;
  }

  # NGINX wont add empty headers
  add_header 'Access-Control-Allow-Origin' $cors_origin;
  add_header 'Access-Control-Allow-Credentials' $cors_cred;
  add_header 'Access-Control-Allow-Methods' $cors_method;
  add_header 'Access-Control-Allow-Headers' $cors_headers;
  add_header 'Access-Control-Max-Age' $cors_max_age;
  add_header 'Content-Type' $cors_content_type;
  add_header 'Content-Length' $cors_content_length;

  # 204 out if this is an options request
  if ($cors_state = 'origin_preflight') {
    return 204;
  }

  # if we got here and its an options request, then it wasn't valid. 405 out
  if ($request_method = 'OPTIONS') {
    return 405;
  }

  location / {
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ [^/]\.php(/|$) {
    include fastcgi_params;
    fastcgi_intercept_errors on;
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    fastcgi_pass unix:/var/run/php/php8-fpm.sock;
    fastcgi_index index.php;
    fastcgi_param SCRIPT_FILENAME $request_filename;
  }
}
